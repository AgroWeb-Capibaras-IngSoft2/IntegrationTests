[pytest]
# Configuración de pytest para pruebas de integración AgroWeb

# Directorios de pruebas
testpaths = tests

# Patrones de archivos de prueba
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Marcadores personalizados
markers =
    integration: Pruebas de integración end-to-end
    api: Pruebas específicas de API REST
    database: Pruebas que requieren conexión a base de datos
    performance: Pruebas de rendimiento y carga
    error_handling: Pruebas de manejo de errores
    smoke: Pruebas básicas de funcionamiento
    regression: Pruebas de regresión
    slow: Pruebas que toman tiempo considerable
    productos: Pruebas específicas del servicio de productos
    usuarios: Pruebas específicas del servicio de usuarios
    observability: Pruebas de métricas y observabilidad

# Opciones por defecto
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --durations=10
    --color=yes
    --junit-xml=reports/junit.xml
    --html=reports/pytest_report.html
    --self-contained-html
    --json-report
    --json-report-file=reports/test_results.json

# Filtros de warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*:urllib3.exceptions.InsecureRequestWarning

# Configuración de cobertura (si se usa pytest-cov)
# --cov=api
# --cov-report=html:reports/coverage
# --cov-report=term-missing
# --cov-fail-under=80

# Timeout para pruebas individuales (en segundos)
timeout = 300

# Configuración de logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Variables de entorno para pruebas
env = 
    TESTING = true
    PYTEST_RUNNING = true
