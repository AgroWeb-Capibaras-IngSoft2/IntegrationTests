<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="8" skipped="0" tests="10" time="76.696" timestamp="2025-07-19T14:19:32.123534-05:00" hostname="DESKTOP-RDK27V2"><testcase classname="tests.carrito.test_api_integration.TestCarritoAPIIntegration" name="test_crear_carrito_exitoso" time="8.250"><failure message="AssertionError: Error creando carrito: 500 - &lt;!doctype html&gt;&#10;  &lt;html lang=en&gt;&#10;    &lt;head&gt;&#10;      &lt;title&gt;ValueError: connection already closed&#10;   // Werkzeug Debugger&lt;/title&gt;&#10;      &lt;link rel=&quot;stylesheet&quot; href=&quot;?__debugger__=yes&amp;amp;cmd=resource&amp;amp;f=style.css&quot;&gt;&#10;      &lt;link rel=&quot;shortcut icon&quot;&#10;          href=&quot;?__debugger__=yes&amp;amp;cmd=resource&amp;amp;f=console.png&quot;&gt;&#10;      &lt;script src=&quot;?__debugger__=yes&amp;amp;cmd=resource&amp;amp;f=debugger.js&quot;&gt;&lt;/script&gt;&#10;      &lt;script&gt;&#10;        var CONSOLE_MODE = false,&#10;            EVALEX = true,&#10;            EVALEX_TRUSTED = false,&#10;            SECRET = &quot;nPBDzGGZTEmkBcSBWG3N&quot;;&#10;      &lt;/script&gt;&#10;    &lt;/head&gt;&#10;    &lt;body style=&quot;background-color: #fff&quot;&gt;&#10;      &lt;div class=&quot;debugger&quot;&gt;&#10;  &lt;h1&gt;ValueError&lt;/h1&gt;&#10;  &lt;div class=&quot;detail&quot;&gt;&#10;    &lt;p class=&quot;errormsg&quot;&gt;ValueError: connection already closed&#10;  &lt;/p&gt;&#10;  &lt;/div&gt;&#10;  &lt;h2 class=&quot;traceback&quot;&gt;Traceback &lt;em&gt;(most recent call last)&lt;/em&gt;&lt;/h2&gt;&#10;  &lt;div class=&quot;traceback&quot;&gt;&#10;    &lt;h3&gt;&lt;/h3&gt;&#10;    &lt;ul&gt;&lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343945424&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\InterfaceAdapters\UtilsAdapter.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;17&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;validarExistenciaCarrito&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source &quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;sqlQuery=&amp;#34;&amp;#34;&amp;#34;SELECT id_carrito&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                    &lt;/span&gt;FROM carrito&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                    &lt;/span&gt;WHERE userdocument=%s AND userdocumenttype=%s ;&amp;#34;&amp;#34;&amp;#34;&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;rows=None&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;try:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;with self.connection.cursor() as cursor:&#10;  &lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;     ^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;cursor.execute(sqlQuery,(numberDocument,typeDocument))&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;rows=cursor.fetchall()&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;if(len(rows)!=0):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                    &lt;/span&gt;return True&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;else:&lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;li&gt;&lt;div class=&quot;exc-divider&quot;&gt;During handling of the above exception, another exception occurred:&lt;/div&gt;&#10;  &lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343338384&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;1536&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;__call__&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source library&quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;) -&amp;gt; cabc.Iterable[bytes]:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;&amp;#34;&amp;#34;&amp;#34;The WSGI server calls the Flask application object as the&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;WSGI application. This calls :meth:`wsgi_app`, which can be&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;wrapped to apply middleware.&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;return self.wsgi_app(environ, start_response)&#10;  &lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343337520&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;1514&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;wsgi_app&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source library&quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;try:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;ctx.push()&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;response = self.full_dispatch_request()&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;except Exception as e:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;error = e&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;response = self.handle_exception(e)&#10;  &lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;           ^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;except:  # noqa: B001&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;error = sys.exc_info()[1]&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;raise&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;return response(environ, start_response)&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;finally:&lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343337376&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask_cors\extension.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;176&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;wrapped_function&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source library&quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;# These error handlers will still respect the behavior of the route&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;if options.get(&amp;#34;intercept_exceptions&amp;#34;, True):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;def _after_request_decorator(f):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;def wrapped_function(*args, **kwargs):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                    &lt;/span&gt;return cors_after_request(app.make_response(f(*args, **kwargs)))&#10;  &lt;span class=&quot;ws&quot;&gt;                    &lt;/span&gt;                                            ^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;return wrapped_function&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;if hasattr(app, &amp;#34;handle_exception&amp;#34;):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;app.handle_exception = _after_request_decorator(app.handle_exception)&lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343337664&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;1511&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;wsgi_app&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source library&quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;ctx = self.request_context(environ)&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;error: BaseException | None = None&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;try:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;try:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;ctx.push()&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;response = self.full_dispatch_request()&#10;  &lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;except Exception as e:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;error = e&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;response = self.handle_exception(e)&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;except:  # noqa: B001&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;error = sys.exc_info()[1]&lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343337808&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;919&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;full_dispatch_request&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source library&quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;request_started.send(self, _async_wrapper=self.ensure_sync)&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;rv = self.preprocess_request()&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;if rv is None:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;rv = self.dispatch_request()&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;except Exception as e:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;rv = self.handle_user_exception(e)&#10;  &lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;return self.finalize_request(rv)&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;def finalize_request(&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;self,&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;rv: ft.ResponseReturnValue | HTTPException,&lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343337952&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask_cors\extension.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;176&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;wrapped_function&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source library&quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;# These error handlers will still respect the behavior of the route&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;if options.get(&amp;#34;intercept_exceptions&amp;#34;, True):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;def _after_request_decorator(f):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;def wrapped_function(*args, **kwargs):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                    &lt;/span&gt;return cors_after_request(app.make_response(f(*args, **kwargs)))&#10;  &lt;span class=&quot;ws&quot;&gt;                    &lt;/span&gt;                                            ^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;return wrapped_function&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;if hasattr(app, &amp;#34;handle_exception&amp;#34;):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;app.handle_exception = _after_request_decorator(app.handle_exception)&lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343338096&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;917&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;full_dispatch_request&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source library&quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;try:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;request_started.send(self, _async_wrapper=self.ensure_sync)&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;rv = self.preprocess_request()&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;if rv is None:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;rv = self.dispatch_request()&#10;  &lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;     ^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;except Exception as e:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;rv = self.handle_user_exception(e)&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;return self.finalize_request(rv)&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;def finalize_request(&lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343338240&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;902&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;dispatch_request&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source library&quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;and req.method == &amp;#34;OPTIONS&amp;#34;&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;return self.make_default_options_response()&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;# otherwise dispatch to the handler for that endpoint&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]&#10;  &lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;def full_dispatch_request(self) -&amp;gt; Response:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;&amp;#34;&amp;#34;&amp;#34;Dispatches the request and on top of that performs request&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;pre and postprocessing as well as HTTP exception catching and&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;error handling.&lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343338528&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\MetricsDecorator.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;39&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;wrapper&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source &quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;except Exception as e:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;# 5. Contar errores de excepción&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;ERROR_COUNT.labels(endpoint=endpoint_name).inc()&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;# Medir tiempo aunque haya error&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;REQUEST_LATENCY.observe(time.time() - start_time)&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;raise e  # Re-lanzar la excepción&#10;  &lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;^^^^^^^&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;return wrapper&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;return decorator&lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343337088&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\MetricsDecorator.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;18&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;wrapper&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source &quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;# 2. Contar la petición&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;REQUEST_COUNT.labels(method=request.method, endpoint=endpoint_name).inc()&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;try:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;# 3. Ejecutar la función&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;response = func(*args, **kwargs)&#10;  &lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;           ^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;# 4. Medir tiempo total&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;REQUEST_LATENCY.observe(time.time() - start_time)&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;# 5. Verificar si hay errores HTTP (4xx, 5xx)&lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343338672&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\Routes.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;60&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;crear_carrito&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source &quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt;@bp.route(&amp;#34;/carrito/create&amp;#34;,methods=[&amp;#34;POST&amp;#34;])&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt;@monitor_endpoint(&amp;#34;crear_carrito&amp;#34;)&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt;def crear_carrito():&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;data=request.get_json()&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;#Esta data se pasa al caso de uso encargado&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;resul=createCarUseCase.crearCarrito(data.get(&amp;#34;userDocument&amp;#34;),data.get(&amp;#34;docType&amp;#34;))&#10;  &lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;#TODO: Cerrar conexión&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;if(resul[&amp;#34;Success&amp;#34;]):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;return jsonify(resul),200&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;else:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;return jsonify(resul),409&lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343337232&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Application\UseCases\CrearCarritoUseCase.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;14&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;crearCarrito&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source &quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;crearCarrRepo:CrearCarrritoI&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;utils:UtilsI&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;def crearCarrito(self,usrDocument:str,userDocType:str):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;if(not(self.utils.validarExistenciaCarrito(usrDocument,userDocType))): #Si el carrito no existe se crea uno&#10;  &lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;try:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;new_carrito = Carrito(user_document=usrDocument,user_documentType=userDocType)&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;self.crearCarrRepo.crearCarrito(new_carrito)&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;return {&amp;#34;Success&amp;#34;:True,&amp;#34;message&amp;#34;:&amp;#34;Carrito creado con exito&amp;#34;}&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;li&gt;&lt;div class=&quot;frame&quot; id=&quot;frame-1928343945280&quot;&gt;&#10;    &lt;h4&gt;File &lt;cite class=&quot;filename&quot;&gt;&quot;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\InterfaceAdapters\UtilsAdapter.py&quot;&lt;/cite&gt;,&#10;        line &lt;em class=&quot;line&quot;&gt;25&lt;/em&gt;,&#10;        in &lt;code class=&quot;function&quot;&gt;validarExistenciaCarrito&lt;/code&gt;&lt;/h4&gt;&#10;    &lt;div class=&quot;source &quot;&gt;&lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;if(len(rows)!=0):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                    &lt;/span&gt;return True&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                &lt;/span&gt;else:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;                    &lt;/span&gt;return False&lt;/pre&gt;&#10;  &lt;pre class=&quot;line before&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;except Exception as e:&lt;/pre&gt;&#10;  &lt;pre class=&quot;line current&quot;&gt;&lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;raise ValueError(str(e))&#10;  &lt;span class=&quot;ws&quot;&gt;            &lt;/span&gt;^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;self.connection.close()&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;return False&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;&lt;/span&gt; &lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;    &lt;/span&gt;def existsCarrito(self,id_carrito:int):&lt;/pre&gt;&#10;  &lt;pre class=&quot;line after&quot;&gt;&lt;span class=&quot;ws&quot;&gt;        &lt;/span&gt;try:&lt;/pre&gt;&lt;/div&gt;&#10;  &lt;/div&gt;&#10;  &lt;/ul&gt;&#10;    &lt;blockquote&gt;ValueError: connection already closed&#10;  &lt;/blockquote&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;div class=&quot;plain&quot;&gt;&#10;      &lt;p&gt;&#10;        This is the Copy/Paste friendly version of the traceback.&#10;      &lt;/p&gt;&#10;      &lt;textarea cols=&quot;50&quot; rows=&quot;10&quot; name=&quot;code&quot; readonly&gt;Traceback (most recent call last):&#10;    File &amp;#34;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\InterfaceAdapters\UtilsAdapter.py&amp;#34;, line 17, in validarExistenciaCarrito&#10;      with self.connection.cursor() as cursor:&#10;           ~~~~~~~~~~~~~~~~~~~~~~^^&#10;  psycopg2.InterfaceError: connection already closed&#10;  &#10;  During handling of the above exception, another exception occurred:&#10;  &#10;  Traceback (most recent call last):&#10;    File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&amp;#34;, line 1536, in __call__&#10;      return self.wsgi_app(environ, start_response)&#10;             ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^&#10;    File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&amp;#34;, line 1514, in wsgi_app&#10;      response = self.handle_exception(e)&#10;    File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask_cors\extension.py&amp;#34;, line 176, in wrapped_function&#10;      return cors_after_request(app.make_response(f(*args, **kwargs)))&#10;                                                  ~^^^^^^^^^^^^^^^^^&#10;    File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&amp;#34;, line 1511, in wsgi_app&#10;      response = self.full_dispatch_request()&#10;    File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&amp;#34;, line 919, in full_dispatch_request&#10;      rv = self.handle_user_exception(e)&#10;    File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask_cors\extension.py&amp;#34;, line 176, in wrapped_function&#10;      return cors_after_request(app.make_response(f(*args, **kwargs)))&#10;                                                  ~^^^^^^^^^^^^^^^^^&#10;    File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&amp;#34;, line 917, in full_dispatch_request&#10;      rv = self.dispatch_request()&#10;    File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&amp;#34;, line 902, in dispatch_request&#10;      return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]&#10;             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^&#10;    File &amp;#34;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\MetricsDecorator.py&amp;#34;, line 39, in wrapper&#10;      raise e  # Re-lanzar la excepción&#10;      ^^^^^^^&#10;    File &amp;#34;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\MetricsDecorator.py&amp;#34;, line 18, in wrapper&#10;      response = func(*args, **kwargs)&#10;    File &amp;#34;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\Routes.py&amp;#34;, line 60, in crear_carrito&#10;      resul=createCarUseCase.crearCarrito(data.get(&amp;#34;userDocument&amp;#34;),data.get(&amp;#34;docType&amp;#34;))&#10;    File &amp;#34;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Application\UseCases\CrearCarritoUseCase.py&amp;#34;, line 14, in crearCarrito&#10;      if(not(self.utils.validarExistenciaCarrito(usrDocument,userDocType))): #Si el carrito no existe se crea uno&#10;             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^&#10;    File &amp;#34;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\InterfaceAdapters\UtilsAdapter.py&amp;#34;, line 25, in validarExistenciaCarrito&#10;      raise ValueError(str(e))&#10;  ValueError: connection already closed&#10;  &lt;/textarea&gt;&#10;  &lt;/div&gt;&#10;  &lt;div class=&quot;explanation&quot;&gt;&#10;    The debugger caught an exception in your WSGI application.  You can now&#10;    look at the traceback which led to the error.  &lt;span class=&quot;nojavascript&quot;&gt;&#10;    If you enable JavaScript you can also use additional features such as code&#10;    execution (if the evalex feature is enabled), automatic pasting of the&#10;    exceptions and much more.&lt;/span&gt;&#10;  &lt;/div&gt;&#10;        &lt;div class=&quot;footer&quot;&gt;&#10;          Brought to you by &lt;strong class=&quot;arthur&quot;&gt;DON'T PANIC&lt;/strong&gt;, your&#10;          friendly Werkzeug powered traceback interpreter.&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;  &#10;      &lt;div class=&quot;pin-prompt&quot;&gt;&#10;        &lt;div class=&quot;inner&quot;&gt;&#10;          &lt;h3&gt;Console Locked&lt;/h3&gt;&#10;          &lt;p&gt;&#10;            The console is locked and needs to be unlocked by entering the PIN.&#10;            You can find the PIN printed out on the standard output of your&#10;            shell that runs the server.&#10;          &lt;form&gt;&#10;            &lt;p&gt;PIN:&#10;              &lt;input type=text name=pin size=14&gt;&#10;              &lt;input type=submit name=btn value=&quot;Confirm Pin&quot;&gt;&#10;          &lt;/form&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/body&gt;&#10;  &lt;/html&gt;&#10;  &#10;  &lt;!--&#10;  &#10;  Traceback (most recent call last):&#10;    File &quot;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\InterfaceAdapters\UtilsAdapter.py&quot;, line 17, in validarExistenciaCarrito&#10;      with self.connection.cursor() as cursor:&#10;           ~~~~~~~~~~~~~~~~~~~~~~^^&#10;  psycopg2.InterfaceError: connection already closed&#10;  &#10;  During handling of the above exception, another exception occurred:&#10;  &#10;  Traceback (most recent call last):&#10;    File &quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&quot;, line 1536, in __call__&#10;      return self.wsgi_app(environ, start_response)&#10;             ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^&#10;    File &quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&quot;, line 1514, in wsgi_app&#10;      response = self.handle_exception(e)&#10;    File &quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask_cors\extension.py&quot;, line 176, in wrapped_function&#10;      return cors_after_request(app.make_response(f(*args, **kwargs)))&#10;                                                  ~^^^^^^^^^^^^^^^^^&#10;    File &quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&quot;, line 1511, in wsgi_app&#10;      response = self.full_dispatch_request()&#10;    File &quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&quot;, line 919, in full_dispatch_request&#10;      rv = self.handle_user_exception(e)&#10;    File &quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask_cors\extension.py&quot;, line 176, in wrapped_function&#10;      return cors_after_request(app.make_response(f(*args, **kwargs)))&#10;                                                  ~^^^^^^^^^^^^^^^^^&#10;    File &quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&quot;, line 917, in full_dispatch_request&#10;      rv = self.dispatch_request()&#10;    File &quot;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&quot;, line 902, in dispatch_request&#10;      return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]&#10;             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^&#10;    File &quot;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\MetricsDecorator.py&quot;, line 39, in wrapper&#10;      raise e  # Re-lanzar la excepción&#10;      ^^^^^^^&#10;    File &quot;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\MetricsDecorator.py&quot;, line 18, in wrapper&#10;      response = func(*args, **kwargs)&#10;    File &quot;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\Routes.py&quot;, line 60, in crear_carrito&#10;      resul=createCarUseCase.crearCarrito(data.get(&quot;userDocument&quot;),data.get(&quot;docType&quot;))&#10;    File &quot;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Application\UseCases\CrearCarritoUseCase.py&quot;, line 14, in crearCarrito&#10;      if(not(self.utils.validarExistenciaCarrito(usrDocument,userDocType))): #Si el carrito no existe se crea uno&#10;             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^&#10;    File &quot;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\InterfaceAdapters\UtilsAdapter.py&quot;, line 25, in validarExistenciaCarrito&#10;      raise ValueError(str(e))&#10;  ValueError: connection already closed&#10;  &#10;  &#10;  --&gt;&#10;  &#10;assert 500 == 201&#10; +  where 500 = &lt;Response [500]&gt;.status_code">tests\carrito\test_api_integration.py:42: in test_crear_carrito_exitoso
    assert response.status_code == 201, f"Error creando carrito: {response.status_code} - {response.text}"
E   AssertionError: Error creando carrito: 500 - &lt;!doctype html&gt;
E     &lt;html lang=en&gt;
E       &lt;head&gt;
E         &lt;title&gt;ValueError: connection already closed
E      // Werkzeug Debugger&lt;/title&gt;
E         &lt;link rel="stylesheet" href="?__debugger__=yes&amp;amp;cmd=resource&amp;amp;f=style.css"&gt;
E         &lt;link rel="shortcut icon"
E             href="?__debugger__=yes&amp;amp;cmd=resource&amp;amp;f=console.png"&gt;
E         &lt;script src="?__debugger__=yes&amp;amp;cmd=resource&amp;amp;f=debugger.js"&gt;&lt;/script&gt;
E         &lt;script&gt;
E           var CONSOLE_MODE = false,
E               EVALEX = true,
E               EVALEX_TRUSTED = false,
E               SECRET = "nPBDzGGZTEmkBcSBWG3N";
E         &lt;/script&gt;
E       &lt;/head&gt;
E       &lt;body style="background-color: #fff"&gt;
E         &lt;div class="debugger"&gt;
E     &lt;h1&gt;ValueError&lt;/h1&gt;
E     &lt;div class="detail"&gt;
E       &lt;p class="errormsg"&gt;ValueError: connection already closed
E     &lt;/p&gt;
E     &lt;/div&gt;
E     &lt;h2 class="traceback"&gt;Traceback &lt;em&gt;(most recent call last)&lt;/em&gt;&lt;/h2&gt;
E     &lt;div class="traceback"&gt;
E       &lt;h3&gt;&lt;/h3&gt;
E       &lt;ul&gt;&lt;li&gt;&lt;div class="frame" id="frame-1928343945424"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\InterfaceAdapters\UtilsAdapter.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;17&lt;/em&gt;,
E           in &lt;code class="function"&gt;validarExistenciaCarrito&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;sqlQuery=&amp;#34;&amp;#34;&amp;#34;SELECT id_carrito&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                    &lt;/span&gt;FROM carrito&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                    &lt;/span&gt;WHERE userdocument=%s AND userdocumenttype=%s ;&amp;#34;&amp;#34;&amp;#34;&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;rows=None&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;try:&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;with self.connection.cursor() as cursor:
E     &lt;span class="ws"&gt;            &lt;/span&gt;     ^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;cursor.execute(sqlQuery,(numberDocument,typeDocument))&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;rows=cursor.fetchall()&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;if(len(rows)!=0):&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                    &lt;/span&gt;return True&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;else:&lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     
E     &lt;li&gt;&lt;div class="exc-divider"&gt;During handling of the above exception, another exception occurred:&lt;/div&gt;
E     &lt;li&gt;&lt;div class="frame" id="frame-1928343338384"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;1536&lt;/em&gt;,
E           in &lt;code class="function"&gt;__call__&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source library"&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;) -&amp;gt; cabc.Iterable[bytes]:&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;&amp;#34;&amp;#34;&amp;#34;The WSGI server calls the Flask application object as the&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;WSGI application. This calls :meth:`wsgi_app`, which can be&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;wrapped to apply middleware.&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;return self.wsgi_app(environ, start_response)
E     &lt;span class="ws"&gt;        &lt;/span&gt;       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     
E     &lt;li&gt;&lt;div class="frame" id="frame-1928343337520"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;1514&lt;/em&gt;,
E           in &lt;code class="function"&gt;wsgi_app&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source library"&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;try:&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;ctx.push()&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;response = self.full_dispatch_request()&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;except Exception as e:&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;error = e&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;response = self.handle_exception(e)
E     &lt;span class="ws"&gt;                &lt;/span&gt;           ^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;except:  # noqa: B001&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;error = sys.exc_info()[1]&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;raise&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;return response(environ, start_response)&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;finally:&lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     
E     &lt;li&gt;&lt;div class="frame" id="frame-1928343337376"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask_cors\extension.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;176&lt;/em&gt;,
E           in &lt;code class="function"&gt;wrapped_function&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source library"&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;# These error handlers will still respect the behavior of the route&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;if options.get(&amp;#34;intercept_exceptions&amp;#34;, True):&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;def _after_request_decorator(f):&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;def wrapped_function(*args, **kwargs):&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;                    &lt;/span&gt;return cors_after_request(app.make_response(f(*args, **kwargs)))
E     &lt;span class="ws"&gt;                    &lt;/span&gt;                                            ^^^^^^^^^^^^^^^^^^&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;return wrapped_function&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;if hasattr(app, &amp;#34;handle_exception&amp;#34;):&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;app.handle_exception = _after_request_decorator(app.handle_exception)&lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     
E     &lt;li&gt;&lt;div class="frame" id="frame-1928343337664"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;1511&lt;/em&gt;,
E           in &lt;code class="function"&gt;wsgi_app&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source library"&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;ctx = self.request_context(environ)&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;error: BaseException | None = None&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;try:&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;try:&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;ctx.push()&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;response = self.full_dispatch_request()
E     &lt;span class="ws"&gt;                &lt;/span&gt;           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;except Exception as e:&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;error = e&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;response = self.handle_exception(e)&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;except:  # noqa: B001&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;error = sys.exc_info()[1]&lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     
E     &lt;li&gt;&lt;div class="frame" id="frame-1928343337808"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;919&lt;/em&gt;,
E           in &lt;code class="function"&gt;full_dispatch_request&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source library"&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;request_started.send(self, _async_wrapper=self.ensure_sync)&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;rv = self.preprocess_request()&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;if rv is None:&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;rv = self.dispatch_request()&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;except Exception as e:&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;rv = self.handle_user_exception(e)
E     &lt;span class="ws"&gt;            &lt;/span&gt;     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;return self.finalize_request(rv)&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;def finalize_request(&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;self,&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;rv: ft.ResponseReturnValue | HTTPException,&lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     
E     &lt;li&gt;&lt;div class="frame" id="frame-1928343337952"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask_cors\extension.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;176&lt;/em&gt;,
E           in &lt;code class="function"&gt;wrapped_function&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source library"&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;# These error handlers will still respect the behavior of the route&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;if options.get(&amp;#34;intercept_exceptions&amp;#34;, True):&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;def _after_request_decorator(f):&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;def wrapped_function(*args, **kwargs):&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;                    &lt;/span&gt;return cors_after_request(app.make_response(f(*args, **kwargs)))
E     &lt;span class="ws"&gt;                    &lt;/span&gt;                                            ^^^^^^^^^^^^^^^^^^&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;return wrapped_function&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;if hasattr(app, &amp;#34;handle_exception&amp;#34;):&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;app.handle_exception = _after_request_decorator(app.handle_exception)&lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     
E     &lt;li&gt;&lt;div class="frame" id="frame-1928343338096"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;917&lt;/em&gt;,
E           in &lt;code class="function"&gt;full_dispatch_request&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source library"&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;try:&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;request_started.send(self, _async_wrapper=self.ensure_sync)&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;rv = self.preprocess_request()&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;if rv is None:&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;rv = self.dispatch_request()
E     &lt;span class="ws"&gt;                &lt;/span&gt;     ^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;except Exception as e:&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;rv = self.handle_user_exception(e)&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;return self.finalize_request(rv)&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;def finalize_request(&lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     
E     &lt;li&gt;&lt;div class="frame" id="frame-1928343338240"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;902&lt;/em&gt;,
E           in &lt;code class="function"&gt;dispatch_request&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source library"&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;and req.method == &amp;#34;OPTIONS&amp;#34;&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;):&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;return self.make_default_options_response()&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;# otherwise dispatch to the handler for that endpoint&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
E     &lt;span class="ws"&gt;        &lt;/span&gt;       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;def full_dispatch_request(self) -&amp;gt; Response:&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;&amp;#34;&amp;#34;&amp;#34;Dispatches the request and on top of that performs request&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;pre and postprocessing as well as HTTP exception catching and&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;error handling.&lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     
E     &lt;li&gt;&lt;div class="frame" id="frame-1928343338528"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\MetricsDecorator.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;39&lt;/em&gt;,
E           in &lt;code class="function"&gt;wrapper&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;except Exception as e:&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;# 5. Contar errores de excepción&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;ERROR_COUNT.labels(endpoint=endpoint_name).inc()&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;# Medir tiempo aunque haya error&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;REQUEST_LATENCY.observe(time.time() - start_time)&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;raise e  # Re-lanzar la excepción
E     &lt;span class="ws"&gt;                &lt;/span&gt;^^^^^^^&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;return wrapper&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;return decorator&lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     
E     &lt;li&gt;&lt;div class="frame" id="frame-1928343337088"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\MetricsDecorator.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;18&lt;/em&gt;,
E           in &lt;code class="function"&gt;wrapper&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;# 2. Contar la petición&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;REQUEST_COUNT.labels(method=request.method, endpoint=endpoint_name).inc()&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;try:&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;# 3. Ejecutar la función&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;response = func(*args, **kwargs)
E     &lt;span class="ws"&gt;                &lt;/span&gt;           ^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;# 4. Medir tiempo total&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;REQUEST_LATENCY.observe(time.time() - start_time)&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;# 5. Verificar si hay errores HTTP (4xx, 5xx)&lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     
E     &lt;li&gt;&lt;div class="frame" id="frame-1928343338672"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\Routes.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;60&lt;/em&gt;,
E           in &lt;code class="function"&gt;crear_carrito&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt;@bp.route(&amp;#34;/carrito/create&amp;#34;,methods=[&amp;#34;POST&amp;#34;])&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt;@monitor_endpoint(&amp;#34;crear_carrito&amp;#34;)&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt;def crear_carrito():&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;data=request.get_json()&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;#Esta data se pasa al caso de uso encargado&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;resul=createCarUseCase.crearCarrito(data.get(&amp;#34;userDocument&amp;#34;),data.get(&amp;#34;docType&amp;#34;))
E     &lt;span class="ws"&gt;    &lt;/span&gt;      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;#TODO: Cerrar conexión&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;if(resul[&amp;#34;Success&amp;#34;]):&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;return jsonify(resul),200&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;else:&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;return jsonify(resul),409&lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     
E     &lt;li&gt;&lt;div class="frame" id="frame-1928343337232"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Application\UseCases\CrearCarritoUseCase.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;14&lt;/em&gt;,
E           in &lt;code class="function"&gt;crearCarrito&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;crearCarrRepo:CrearCarrritoI&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;utils:UtilsI&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;def crearCarrito(self,usrDocument:str,userDocType:str):&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;if(not(self.utils.validarExistenciaCarrito(usrDocument,userDocType))): #Si el carrito no existe se crea uno
E     &lt;span class="ws"&gt;        &lt;/span&gt;       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;try:&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;new_carrito = Carrito(user_document=usrDocument,user_documentType=userDocType)&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;self.crearCarrRepo.crearCarrito(new_carrito)&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;return {&amp;#34;Success&amp;#34;:True,&amp;#34;message&amp;#34;:&amp;#34;Carrito creado con exito&amp;#34;}&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     
E     &lt;li&gt;&lt;div class="frame" id="frame-1928343945280"&gt;
E       &lt;h4&gt;File &lt;cite class="filename"&gt;"D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\InterfaceAdapters\UtilsAdapter.py"&lt;/cite&gt;,
E           line &lt;em class="line"&gt;25&lt;/em&gt;,
E           in &lt;code class="function"&gt;validarExistenciaCarrito&lt;/code&gt;&lt;/h4&gt;
E       &lt;div class="source "&gt;&lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;if(len(rows)!=0):&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                    &lt;/span&gt;return True&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                &lt;/span&gt;else:&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;                    &lt;/span&gt;return False&lt;/pre&gt;
E     &lt;pre class="line before"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;except Exception as e:&lt;/pre&gt;
E     &lt;pre class="line current"&gt;&lt;span class="ws"&gt;            &lt;/span&gt;raise ValueError(str(e))
E     &lt;span class="ws"&gt;            &lt;/span&gt;^^^^^^^^^^^^^^^^^^^^^^^^&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;self.connection.close()&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;return False&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;&lt;/span&gt; &lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;    &lt;/span&gt;def existsCarrito(self,id_carrito:int):&lt;/pre&gt;
E     &lt;pre class="line after"&gt;&lt;span class="ws"&gt;        &lt;/span&gt;try:&lt;/pre&gt;&lt;/div&gt;
E     &lt;/div&gt;
E     &lt;/ul&gt;
E       &lt;blockquote&gt;ValueError: connection already closed
E     &lt;/blockquote&gt;
E     &lt;/div&gt;
E     
E     &lt;div class="plain"&gt;
E         &lt;p&gt;
E           This is the Copy/Paste friendly version of the traceback.
E         &lt;/p&gt;
E         &lt;textarea cols="50" rows="10" name="code" readonly&gt;Traceback (most recent call last):
E       File &amp;#34;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\InterfaceAdapters\UtilsAdapter.py&amp;#34;, line 17, in validarExistenciaCarrito
E         with self.connection.cursor() as cursor:
E              ~~~~~~~~~~~~~~~~~~~~~~^^
E     psycopg2.InterfaceError: connection already closed
E     
E     During handling of the above exception, another exception occurred:
E     
E     Traceback (most recent call last):
E       File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&amp;#34;, line 1536, in __call__
E         return self.wsgi_app(environ, start_response)
E                ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
E       File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&amp;#34;, line 1514, in wsgi_app
E         response = self.handle_exception(e)
E       File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask_cors\extension.py&amp;#34;, line 176, in wrapped_function
E         return cors_after_request(app.make_response(f(*args, **kwargs)))
E                                                     ~^^^^^^^^^^^^^^^^^
E       File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&amp;#34;, line 1511, in wsgi_app
E         response = self.full_dispatch_request()
E       File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&amp;#34;, line 919, in full_dispatch_request
E         rv = self.handle_user_exception(e)
E       File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask_cors\extension.py&amp;#34;, line 176, in wrapped_function
E         return cors_after_request(app.make_response(f(*args, **kwargs)))
E                                                     ~^^^^^^^^^^^^^^^^^
E       File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&amp;#34;, line 917, in full_dispatch_request
E         rv = self.dispatch_request()
E       File &amp;#34;C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py&amp;#34;, line 902, in dispatch_request
E         return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
E                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
E       File &amp;#34;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\MetricsDecorator.py&amp;#34;, line 39, in wrapper
E         raise e  # Re-lanzar la excepción
E         ^^^^^^^
E       File &amp;#34;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\MetricsDecorator.py&amp;#34;, line 18, in wrapper
E         response = func(*args, **kwargs)
E       File &amp;#34;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\Routes.py&amp;#34;, line 60, in crear_carrito
E         resul=createCarUseCase.crearCarrito(data.get(&amp;#34;userDocument&amp;#34;),data.get(&amp;#34;docType&amp;#34;))
E       File &amp;#34;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Application\UseCases\CrearCarritoUseCase.py&amp;#34;, line 14, in crearCarrito
E         if(not(self.utils.validarExistenciaCarrito(usrDocument,userDocType))): #Si el carrito no existe se crea uno
E                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
E       File &amp;#34;D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\InterfaceAdapters\UtilsAdapter.py&amp;#34;, line 25, in validarExistenciaCarrito
E         raise ValueError(str(e))
E     ValueError: connection already closed
E     &lt;/textarea&gt;
E     &lt;/div&gt;
E     &lt;div class="explanation"&gt;
E       The debugger caught an exception in your WSGI application.  You can now
E       look at the traceback which led to the error.  &lt;span class="nojavascript"&gt;
E       If you enable JavaScript you can also use additional features such as code
E       execution (if the evalex feature is enabled), automatic pasting of the
E       exceptions and much more.&lt;/span&gt;
E     &lt;/div&gt;
E           &lt;div class="footer"&gt;
E             Brought to you by &lt;strong class="arthur"&gt;DON'T PANIC&lt;/strong&gt;, your
E             friendly Werkzeug powered traceback interpreter.
E           &lt;/div&gt;
E         &lt;/div&gt;
E     
E         &lt;div class="pin-prompt"&gt;
E           &lt;div class="inner"&gt;
E             &lt;h3&gt;Console Locked&lt;/h3&gt;
E             &lt;p&gt;
E               The console is locked and needs to be unlocked by entering the PIN.
E               You can find the PIN printed out on the standard output of your
E               shell that runs the server.
E             &lt;form&gt;
E               &lt;p&gt;PIN:
E                 &lt;input type=text name=pin size=14&gt;
E                 &lt;input type=submit name=btn value="Confirm Pin"&gt;
E             &lt;/form&gt;
E           &lt;/div&gt;
E         &lt;/div&gt;
E       &lt;/body&gt;
E     &lt;/html&gt;
E     
E     &lt;!--
E     
E     Traceback (most recent call last):
E       File "D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\InterfaceAdapters\UtilsAdapter.py", line 17, in validarExistenciaCarrito
E         with self.connection.cursor() as cursor:
E              ~~~~~~~~~~~~~~~~~~~~~~^^
E     psycopg2.InterfaceError: connection already closed
E     
E     During handling of the above exception, another exception occurred:
E     
E     Traceback (most recent call last):
E       File "C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py", line 1536, in __call__
E         return self.wsgi_app(environ, start_response)
E                ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
E       File "C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py", line 1514, in wsgi_app
E         response = self.handle_exception(e)
E       File "C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask_cors\extension.py", line 176, in wrapped_function
E         return cors_after_request(app.make_response(f(*args, **kwargs)))
E                                                     ~^^^^^^^^^^^^^^^^^
E       File "C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
E         response = self.full_dispatch_request()
E       File "C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
E         rv = self.handle_user_exception(e)
E       File "C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask_cors\extension.py", line 176, in wrapped_function
E         return cors_after_request(app.make_response(f(*args, **kwargs)))
E                                                     ~^^^^^^^^^^^^^^^^^
E       File "C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
E         rv = self.dispatch_request()
E       File "C:\Users\Usuario\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py", line 902, in dispatch_request
E         return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
E                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
E       File "D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\MetricsDecorator.py", line 39, in wrapper
E         raise e  # Re-lanzar la excepción
E         ^^^^^^^
E       File "D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\MetricsDecorator.py", line 18, in wrapper
E         response = func(*args, **kwargs)
E       File "D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Infraestructure\Routes.py", line 60, in crear_carrito
E         resul=createCarUseCase.crearCarrito(data.get("userDocument"),data.get("docType"))
E       File "D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\Application\UseCases\CrearCarritoUseCase.py", line 14, in crearCarrito
E         if(not(self.utils.validarExistenciaCarrito(usrDocument,userDocType))): #Si el carrito no existe se crea uno
E                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
E       File "D:\Documents\UNAL\Semestres\9no Semestre\Ingsoft II\Proyecto\Carrito\GestionCarrito\InterfaceAdapters\UtilsAdapter.py", line 25, in validarExistenciaCarrito
E         raise ValueError(str(e))
E     ValueError: connection already closed
E     
E     
E     --&gt;
E     
E   assert 500 == 201
E    +  where 500 = &lt;Response [500]&gt;.status_code</failure></testcase><testcase classname="tests.carrito.test_api_integration.TestCarritoAPIIntegration" name="test_agregar_producto_a_carrito" time="10.234"><failure message="AssertionError: Agregar producto muy lento: 6128.66ms (max: 400ms)&#10;assert 6128.662109375 &lt;= 400">tests\carrito\test_api_integration.py:122: in test_agregar_producto_a_carrito
    assert response_time &lt;= threshold, f"Agregar producto muy lento: {response_time:.2f}ms (max: {threshold}ms)"
E   AssertionError: Agregar producto muy lento: 6128.66ms (max: 400ms)
E   assert 6128.662109375 &lt;= 400</failure></testcase><testcase classname="tests.carrito.test_api_integration.TestCarritoAPIIntegration" name="test_obtener_carrito_exitoso" time="4.112"><failure message="AssertionError: Error obteniendo carrito: 201 - {&#10;    &quot;Success&quot;: false,&#10;    &quot;message&quot;: &quot;'result'&quot;&#10;  }&#10;  &#10;assert 201 == 200&#10; +  where 201 = &lt;Response [201]&gt;.status_code">tests\carrito\test_api_integration.py:147: in test_obtener_carrito_exitoso
    assert response.status_code == 200, f"Error obteniendo carrito: {response.status_code} - {response.text}"
E   AssertionError: Error obteniendo carrito: 201 - {
E       "Success": false,
E       "message": "'result'"
E     }
E     
E   assert 201 == 200
E    +  where 201 = &lt;Response [201]&gt;.status_code</failure></testcase><testcase classname="tests.carrito.test_api_integration.TestCarritoAPIIntegration" name="test_cambiar_cantidad_producto" time="14.273"><failure message="AssertionError: Error cambiando cantidad: 500 - {&#10;    &quot;Success&quot;: false,&#10;    &quot;message&quot;: &quot;HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /products/PROD-577D6765 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x000001C0FA2E3790&gt;: Failed to establish a new connection: [WinError 10061] No se puede establecer una conexi\u00f3n ya que el equipo de destino deneg\u00f3 expresamente dicha conexi\u00f3n'))&quot;&#10;  }&#10;  &#10;assert 500 == 200&#10; +  where 500 = &lt;Response [500]&gt;.status_code">tests\carrito\test_api_integration.py:209: in test_cambiar_cantidad_producto
    assert response.status_code == 200, f"Error cambiando cantidad: {response.status_code} - {response.text}"
E   AssertionError: Error cambiando cantidad: 500 - {
E       "Success": false,
E       "message": "HTTPConnectionPool(host='localhost', port=5000): Max retries exceeded with url: /products/PROD-577D6765 (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x000001C0FA2E3790&gt;: Failed to establish a new connection: [WinError 10061] No se puede establecer una conexi\u00f3n ya que el equipo de destino deneg\u00f3 expresamente dicha conexi\u00f3n'))"
E     }
E     
E   assert 500 == 200
E    +  where 500 = &lt;Response [500]&gt;.status_code</failure></testcase><testcase classname="tests.carrito.test_api_integration.TestCarritoAPIIntegration" name="test_vaciar_carrito_exitoso" time="10.249"><failure message="AssertionError: Error vaciando carrito: 400 - {&#10;    &quot;Success&quot;: false,&#10;    &quot;message&quot;: &quot;No se ha enviado un id de carrito para procesar la solicitud&quot;&#10;  }&#10;  &#10;assert 400 == 200&#10; +  where 400 = &lt;Response [400]&gt;.status_code">tests\carrito\test_api_integration.py:246: in test_vaciar_carrito_exitoso
    assert response.status_code == 200, f"Error vaciando carrito: {response.status_code} - {response.text}"
E   AssertionError: Error vaciando carrito: 400 - {
E       "Success": false,
E       "message": "No se ha enviado un id de carrito para procesar la solicitud"
E     }
E     
E   assert 400 == 200
E    +  where 400 = &lt;Response [400]&gt;.status_code</failure></testcase><testcase classname="tests.carrito.test_api_integration.TestCarritoAPIIntegration" name="test_obtener_carrito_inexistente" time="2.052"><failure message="AssertionError: Debería retornar 404 para carrito inexistente, obtuvo: 201&#10;assert 201 == 404&#10; +  where 201 = &lt;Response [201]&gt;.status_code">tests\carrito\test_api_integration.py:274: in test_obtener_carrito_inexistente
    assert response.status_code == 404, f"Debería retornar 404 para carrito inexistente, obtuvo: {response.status_code}"
E   AssertionError: Debería retornar 404 para carrito inexistente, obtuvo: 201
E   assert 201 == 404
E    +  where 201 = &lt;Response [201]&gt;.status_code</failure></testcase><testcase classname="tests.carrito.test_api_integration.TestCarritoAPIIntegration" name="test_agregar_producto_carrito_inexistente" time="6.137"><failure message="AssertionError: Debería fallar con 400/404/500, obtuvo: 200&#10;assert 200 in [400, 404, 500]&#10; +  where 200 = &lt;Response [200]&gt;.status_code">tests\carrito\test_api_integration.py:300: in test_agregar_producto_carrito_inexistente
    assert response.status_code in [400, 404, 500], f"Debería fallar con 400/404/500, obtuvo: {response.status_code}"
E   AssertionError: Debería fallar con 400/404/500, obtuvo: 200
E   assert 200 in [400, 404, 500]
E    +  where 200 = &lt;Response [200]&gt;.status_code</failure></testcase><testcase classname="tests.carrito.test_api_integration.TestCarritoAPIIntegration" name="test_datos_invalidos_crear_carrito" time="2.075" /><testcase classname="tests.carrito.test_api_integration.TestCarritoAPIIntegration" name="test_crear_carrito_campos_faltantes" time="2.062" /><testcase classname="tests.carrito.test_api_integration.TestCarritoAPIIntegration" name="test_flujo_completo_carrito" time="16.366"><failure message="AssertionError: Error cambiando cantidad: 500&#10;assert 500 == 200&#10; +  where 500 = &lt;Response [500]&gt;.status_code">tests\carrito\test_api_integration.py:395: in test_flujo_completo_carrito
    assert change_response.status_code == 200, f"Error cambiando cantidad: {change_response.status_code}"
E   AssertionError: Error cambiando cantidad: 500
E   assert 500 == 200
E    +  where 500 = &lt;Response [500]&gt;.status_code</failure></testcase></testsuite></testsuites>